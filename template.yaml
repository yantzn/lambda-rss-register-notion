AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  notion-rss

Globals:
  Function:
    Timeout: 900
    Environment:
      Variables:
        TZ: Asia/Tokyo

Parameters:
#  Environment:
#    Type: String
#    Default: dev
  GitHubOrg:
    Type: String
    Default: "yantzn"
  RepositoryName:
    Type: String
    Default: "lambda-rss-register-notion"
  OIDCProviderArn:
    Type: String
    Default: ""

Conditions:
  CreateOIDCProvider: !Equals
    - !Ref OIDCProviderArn
    - ""

Resources:
  NotionRegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "lambda-notion-rss-register"
      CodeUri: ./lambda_notion_rss_register
      Handler: app.lambda_handler
      Runtime: python3.8
      Architectures:
        - x86_64
      Role: !GetAtt NotionRegisterFunctionRole.Arn
      Events:
        RSSGetSchedule:
          Type: Schedule
          Properties:
            Schedule: rate(1 hour) # 1時間毎
            Input: |
              {
                "region": "tokyo"
              }
  #     Layers:
  #     - !Ref CommonLayer

  # CommonLayer:
  #   Type: AWS::Serverless::LayerVersion
  #   Properties:
  #     LayerName: notion_common-layer
  #     Description: Common Application Resource Layer
  #     ContentUri: ./layers


  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1
  GithubOIDCRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "github-OIDCRole"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !Ref OidcProvider
                - !Ref OIDCProviderArn
            Condition:
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*


  NotionRegisterFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - !Ref NotionRegisterFunctionPolicy

  NotionRegisterFunctionPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:CreateLogGroup"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:ap-northeast-1:*:*"
              - Effect: "Allow"
                Action:
                  - "secretsmanager:GetSecretValue"
                  - "ssm:GetParameters"
                  - "ssm:GetParameter"
                Resource: "*"
              - Effect: Allow
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:Describe*
                  - cloudformation:Get*
                  - cloudformation:ValidateTemplate
                Resource: "*"
